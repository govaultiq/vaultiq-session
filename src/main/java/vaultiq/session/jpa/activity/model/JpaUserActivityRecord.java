package vaultiq.session.jpa.activity.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import vaultiq.session.core.model.UserActivityRecord;

import java.time.Instant;

@Entity
@Table(name = "user_activity_records")
public final class JpaUserActivityRecord {

    @Id
    @Column(name = "user_id", updatable = false, nullable = false)
    private String userId;

    @Column(name = "last_active_at", nullable = false)
    private Instant lastActiveAt;

    @Column(name = "session_used", nullable = false)
    private String sessionUsed;

    /**
     * Useful to copy the {@link UserActivityRecord} to a Jpa based entity, acceptable cause the primary key
     * is not autogenerated, it is same as the existing userId of the userEntity.
     * <p>
     *
     * @param source the source {@link UserActivityRecord}
     * @return the {@link JpaUserActivityRecord}
     */
    public static JpaUserActivityRecord copy(UserActivityRecord source) {
        JpaUserActivityRecord activityRecord = new JpaUserActivityRecord();
        activityRecord.setUserId(source.getUserId());
        activityRecord.setLastActiveAt(source.getLastActiveAt());
        activityRecord.setSessionUsed(source.getSessionUsed());
        return activityRecord;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public Instant getLastActiveAt() {
        return lastActiveAt;
    }

    public void setLastActiveAt(Instant lastActiveAt) {
        this.lastActiveAt = lastActiveAt;
    }

    public String getSessionUsed() {
        return sessionUsed;
    }

    public void setSessionUsed(String sessionUsed) {
        this.sessionUsed = sessionUsed;
    }
}
